{"version":3,"sources":["pages/HomePage.js","utils/data.js","components/CincinnatiZipcodes.js","pages/VisualizationPage.js","pages/WriteupPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","Component","getCincinnatiZipCodes","a","fetch","headers","then","response","json","CincinnatiZipcodes","state","cincinnatiCounties","projection","tooltipContent","position","zoom","coordinates","zoomIn","setState","zoomOut","geoEquirectangular","fitExtent","this","onClick","data-tip","projectionConfig","rotate","width","height","center","translateExtent","onMoveEnd","geography","geographies","map","fill","stroke","onMouseEnter","properties","onMouseLeave","rsmKey","VisualizationPage","WriteupPage","App","className","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.757473f2.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nexport default class HomePage extends Component {\n    render() {\n        return (\n            <div>Homepage</div>\n        )\n    }\n}\n","import * as d3 from \"d3\";\n\nconst getCincinnatiCounties = async () => {\n    return await fetch('data/cincinnati_counties.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nconst getCincinnatiZipCodes = async () => {\n    return await fetch('data/cincinnati_zipcodes.geojson', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nexport {\n    getCincinnatiCounties,\n    getCincinnatiZipCodes\n}\n","import React, {Component} from \"react\";\nimport {getCincinnatiZipCodes} from \"../utils/data\";\nimport {ComposableMap, Geographies, Geography, ZoomableGroup} from \"react-simple-maps\";\nimport {geoEquirectangular} from \"d3-geo\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport default class CincinnatiZipcodes extends Component {\n    state = {\n        cincinnatiCounties: null,\n        projection: null,\n        tooltipContent: \"\",\n        position: {zoom: 1, coordinates: [-84.28399485924794, 39.236390248105536]}\n    }\n\n    componentDidMount() {\n        getCincinnatiZipCodes().then(cincinnatiCounties => this.setState({\n            cincinnatiCounties,\n            projection: geoEquirectangular().fitExtent([[200, 0], [600, 500]], cincinnatiCounties)\n        }));\n    }\n\n    zoomIn = () => {\n        if (this.state.position.zoom >= 4) {\n            this.setState({position: {...this.state.position, zoom: 8}})\n        } else {\n            this.setState({position: {...this.state.position, zoom: this.state.position.zoom * 2}})\n        }\n    }\n\n    zoomOut = () => {\n        if (this.state.position.zoom <= 2) {\n            this.setState({position: {...this.state.position, zoom: 1}})\n        } else {\n            this.setState({position: {...this.state.position, zoom: this.state.position.zoom / 2}})\n        }\n    }\n\n    render() {\n        return (\n            this.state.cincinnatiCounties ?\n                <>\n                    <div>\n                        <button onClick={this.zoomOut}>\n                            -\n                        </button>\n                        <button onClick={this.zoomIn}>\n                            +\n                        </button>\n                        <button onClick={() => this.setState({position: {zoom: 1, coordinates: [-84.28399485924794, 39.236390248105536]}})}>\n                            Reset\n                        </button>\n                    </div>\n                    <ComposableMap data-tip={this.state.tooltipContent}\n                                   projection={this.state.projection}\n                                   projectionConfig={{rotate: [0, 20, 0]}}\n                                   width={800}\n                                   height={500}\n                    >\n                        <ZoomableGroup zoom={this.state.position.zoom}\n                                       center={this.state.position.coordinates}\n                                       translateExtent={[[0, 0], [800, 500]]}\n                                       onMoveEnd={position => this.setState({position})}>\n                            <Geographies geography={this.state.cincinnatiCounties}>\n                                {({geographies}) => geographies.map(geography =>\n                                    <Geography key={geography.rsmKey}\n                                               geography={geography}\n                                               fill=\"#aaa\"\n                                               stroke=\"black\"\n                                               onMouseEnter={() => this.setState({tooltipContent: geography.properties['ZCTA5CE10']})}\n                                               onMouseLeave={() => this.setState({tooltipContent: \"\"})}\n                                    />\n                                )}\n                            </Geographies>\n                        </ZoomableGroup>\n                    </ComposableMap>\n                    <ReactTooltip>{this.state.tooltipContent}</ReactTooltip>\n                </>\n                :\n                null\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport CincinnatiZipcodes from \"../components/CincinnatiZipcodes\";\n\nexport default class VisualizationPage extends Component {\n    render() {\n        return (\n            <>\n                <div>Visualization Page</div>\n                <CincinnatiZipcodes/>\n            </>\n        )\n    }\n\n}\n","import React, {Component} from \"react\";\n\nexport default class WriteupPage extends Component {\n    render() {\n        return (\n            <div>Writeup page</div>\n        )\n    }\n}\n","import {HashRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport HomePage from \"./pages/HomePage\";\nimport VisualizationPage from \"./pages/VisualizationPage\";\nimport WriteupPage from \"./pages/WriteupPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <nav>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/visualization\">Visualization</Link>\n                <Link to=\"/writeup\">Writeup</Link>\n            </nav>\n            <Switch>\n                <Route exact path=\"/\" component={HomePage}/>\n                <Route exact path=\"/visualization\" component={VisualizationPage}/>\n                <Route exact path=\"/writeup\" component={WriteupPage}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}