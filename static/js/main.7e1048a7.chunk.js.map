{"version":3,"sources":["components/TextSection.js","utils/data.js","components/BipartisanBubble.js","components/BipartisanEngagement.js","components/AgeInfluences.js","components/Visualization.js","components/StoryTeller.js","pages/StoryPage.js","components/Loading.js","utils/calculations.js","components/OhioCities.js","components/OhioSenateDistricts.js","components/USHouseDistricts.js","components/OhioHouseDistricts.js","components/StatisticsTable.js","pages/MapPage.js","pages/AboutPage.js","App.js","reportWebVitals.js","index.js"],"names":["text_bank","TextSection","props","text","textId","height","console","log","id","style","verticalAlign","position","margin","top","transform","firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getOhioCities","a","fetch","headers","then","response","json","getOhioOutline","getOhioHouseDistricts","getOhioSenateDistricts","getUSHouseDistricts","getOhioZipcodes","getBipartisanStats","stats","type","majority","constructor","Object","keys","map","key","value","undefined","district","proportion","skew","Math","abs","toFixed","dem","push","round","_id","color","population","rep","children","slice","getBipartisanEngagement","data","typesOfScores","parseFloat","s","size","x","y","getAgeInfluences","statistics","avg_age","score","primary","general","special","age","sort","b","options","defaultOption","BipartisanBubble","state","stateHouseStats","stateSenateStats","congressionalStats","cityStats","selected","labelSkip","ref","once","snapshot","val","setState","width","paddingRight","paddingBottom","paddingLeft","right","marginBottom","paddingTop","zIndex","this","display","flexDirection","justifyContent","controlClassName","menuClassName","onChange","d","label","placeholder","bottom","left","colors","childColor","from","modifiers","colorBy","padding","enableLabels","labelsFilter","e","node","depth","labelsSkipRadius","labelTextColor","borderWidth","borderColor","tooltip","input","backgroundColor","lineHeight","defs","background","rotation","lineWidth","spacing","opacity","fill","match","Component","areaOptions","defaultAreaOption","scoreOptions","defaultScoreOption","BipartisanEngagement","selectedArea","selectedScore","animate","nodeSize","xScale","min","max","xFormat","yScale","yFormat","blendMode","axisTop","axisFormat","axisRight","orient","tickSize","tickPadding","tickRotation","axisBottom","legend","legendPosition","legendOffset","axisLeft","AgeInfluences","hoveringOver","getSelected","indexBy","valueScale","indexScale","index","onMouseEnter","_data","event","onMouseLeave","labelSkipWidth","labelSkipHeight","motionStiffness","motionDamping","Visualization","vizId","StoryTeller","marginRight","onEnter","alignItems","fontSize","icon","faAngleDoubleDown","bottomOffset","topOffset","StoryPage","Loading","faSpinner","pulse","red","blue","colorScale","d3","domain","range","legendPositionScale","getLocalityColor","LocalityColorLegend","LinearGradient","to","vertical","textAnchor","buildURI","csv","arrays2csv","test","navigator","userAgent","blob","Blob","dataURI","URL","window","webkitURL","createObjectURL","OhioCities","ohioCities","ohioOutline","ohioZipcodes","projection","clickedCity","clickedCityGeography","clickedZipcode","tooltipContent","loading","hoveringSkew","handleGeographyClicked","geography","properties","NAME","zoomToOhio","zoomToCity","geoEquirectangular","fitExtent","setStatData","setLoadingStatData","toLocaleUpperCase","handleZipcodeClicked","ZCTA5CE10","RESIDENTIAL_ZIP","noData","promises","Promise","all","get","forEach","citySnapshot","CODED_PARTY_AFFILIATION","zipcodeSnapshot","data-tip","geographies","stroke","rsmKey","className","strokeWidth","onClick","html","OhioSenateDistricts","ohioSenateDistricts","clickedDistrict","clickedDistrictGeography","DISTRICT","zoomToDistrict","districtSnapshot","FIRSTNAME","LASTNAME","PARTY","USHouseDistricts","usHouseDistricts","OhioHouseDistricts","ohioHouseDistricts","StatisticsTable","getHeader","localityType","statData","CONGRESSIONAL_DISTRICT","STATE_SENATE_DISTRICT","STATE_REPRESENTATIVE_DISTRICT","CITY","getData","Error","Age","age_stddev","Score","General","Primary","Special","downloadCSV","array","voterSnapshot","newArray","open","border","borderRadius","entries","textAlign","marginTop","MapPage","selectedTab","loadingStatData","toggleSelectedTab","isLoading","maxWidth","AboutPage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e1048a7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst text_bank = [\n  \"Welcome! This visualization tool shows an in-depth look into the voting trends of Asian American and Pacific Islanders (AAPIs) who live in the state of Ohio. On this page, you can explore a few of the trends we found interesting in the data. Please feel free to also head to the 'Map' page where you can explore detailed voter data on your own as well! Finally, in the 'About' tab, you can learn more about the design process and decisions we made in creating this visualization tool! The data was sourced from the Ohio Secretary of State, as well as Dr. Tom Wong (UCSD Political Science).\",\n  \"Within this set of visualizations, you can investigate trends that we found to be significant. In the figure to the right, investigate how AAPI voters in the state of Ohio lean along the political spectrum. Each of the circles represent areas of a Democratic majority, and each of the circles in the red represent areas in a Republican majority. Currently you see the Ohio House Districts, but if you click on the dropdown menu you can also select from cities, US House Districts, and Ohio Senate districts- all districts where competitive elections occur. This is extremely useful in understanding at a quick glance where political campaigns may want invest resources- for example, a Republican candidate likely should not attempt to campaign in Ohio House District 9, as this is a strongly Democratic area. In this visualization, average party leaning was derived from official party affiliation from voter registration data.\\n\\n Scroll further to investigate the data more!\",\n  \"An interesting trend to see is how voter turnout correlates with political party skew. Use the dropdowns to toggle between localities and election types, to see the correlation between party skew and voter engagement. Average Voter Engagement Score (or AVES) was calculated by taking the number elections each individual voted in for the given election type since 2000, dividing by the total number of elections that individual was eligible to vote in since 2000, and averaging over all individuals in the given locality. Seen in nearly all of the districts visualized here, a strong correlation exsits between voters who affiliate with the Republican party and increased turnout, as well as the opposite voter engagement trend for the Democratic party. The consistency of this trend accross the locatlity types reinforces the prominence of this pattern.\",\n  \"In this visualization you can see the distribution of ages accross the different Ohio localizations. A clear correlation can be seen between age, partisan skew, and voter engagement. Specifically, older voters are more Republican-leaning, while younger voters are more Democratic-leaning. That being said, while this correlation is certainly clear at the age extremes, partisan skew fluctuates quite significantly throughout the localities with moderately aged AAPI voters. This trend, in combination with what was seen in the previous visualization above, confirms what is seen on the bottom-most bar chart, where a strong positive correlation (accross locality types) is seen between age and voter engagement.\",\n]\n\nexport default function TextSection(props) {\n    const text = props.textId;\n    const height = props.height;\n\n    console.log(height)\n\n    return (\n        <div\n            id=\"container\"\n            style={{height: height, verticalAlign: \"middle\", position: \"relative\"}}\n        >\n            <div\n                style={{margin: 0, position: \"absolute\", top: \"50%\", transform: \"translateY(-50%)\"}}\n            >\n                {text_bank[text]}\n            </div>\n        </div>\n\n    );\n\n\n}\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB2CQ78YBCVeponJCfN3KGRAYu3G9_aYcY\",\n    authDomain: \"ohio-voters-e4355.firebaseapp.com\",\n    databaseURL: \"https://ohio-voters-e4355-default-rtdb.firebaseio.com\",\n    projectId: \"ohio-voters-e4355\",\n    storageBucket: \"ohio-voters-e4355.appspot.com\",\n    messagingSenderId: \"397490319557\",\n    appId: \"1:397490319557:web:5b15b6dbae2a311dc540ac\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\nexport const firebaseDatabase = firebaseApp.database()\n\nconst getCincinnatiCounties = async () => {\n    return await fetch('data/cincinnati_counties.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nconst getOhioCities = async () => {\n    return await fetch('data/ohio_cities.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nconst getOhioOutline = async () => {\n    return await fetch('data/ohio_outline.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nconst getOhioHouseDistricts = async () => {\n    return await fetch('data/ohio_house_district.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nconst getOhioSenateDistricts = async () => {\n    return await fetch('data/ohio_senate_district.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nconst getUSHouseDistricts = async () => {\n    return await fetch('data/us_house_district.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nconst getOhioZipcodes = async () => {\n    return await fetch('data/ohio_zip_codes.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(response => response.json())\n}\n\nconst getBipartisanStats = (stats, type) => {\n    const majority = {\"dem\": [], \"rep\": []}\n    if (stats.constructor === Object && stats !== null) {\n        stats = Object.keys(stats).map(function (key) {\n            return stats[key];\n        });\n        ;\n    }\n    for (const value of stats) {\n        if (value === undefined) {\n            continue;\n        }\n        var district;\n\n        if (\"STATE_REPRESENTATIVE_DISTRICT\" in value) {\n            district = value[\"STATE_REPRESENTATIVE_DISTRICT\"];\n        } else if (\"CITY\" in value) {\n            district = value[\"CITY\"];\n        } else if (\"CONGRESSIONAL_DISTRICT\" in value) {\n            district = value[\"CONGRESSIONAL_DISTRICT\"];\n        } else {\n            district = value[\"STATE_SENATE_DISTRICT\"];\n        }\n\n        var proportion = value[\"CODED_PARTY_AFFILIATION\"] * value[\"Number of Rows (Aggregated)\"];\n        if (proportion >= 0) {\n            const skew = Math.abs(value[\"CODED_PARTY_AFFILIATION\"].toFixed(3)) + \" skew towards Dem\";\n            majority.dem.push({\n                value: Math.round(proportion),\n                _id: district,\n                color: \"rgba(78, 165, 253, 0.6)\",\n                type: type,\n                skew: skew,\n                population: value[\"Number of Rows (Aggregated)\"]\n            });\n        } else {\n            const skew = Math.abs(value[\"CODED_PARTY_AFFILIATION\"].toFixed(3)) + \" skew towards Rep\";\n            majority.rep.push({\n                value: Math.round(Math.abs(proportion)),\n                _id: district,\n                color: \"rgba(253, 78, 78, 0.6)\",\n                type: type,\n                skew: skew,\n                population: value[\"Number of Rows (Aggregated)\"]\n            });\n        }\n    }\n\n    const majority_grouped = {\n        _id: \"Party Affiliation\", color: 'rgba(78, 165, 253, 0)', children: [\n            {\n                _id: (type !== \"City\") ? \"Democratic Leaning \" + type.slice(0, -2) + \"s\" : \"Democratic Leaning Cities\",\n                // color: \"hsl(217, 70%, 50%)\",\n                color: 'rgba(78, 165, 253, 0.36)',\n\n                children: majority.dem,\n            },\n            {\n                _id: (type !== \"City\") ? \"Republican Leaning \" + type.slice(0, -2) + \"s\" : \"Republican Leaning Cities\",\n                // color: \"hsl(338, 70%, 50%)\",\n                color: 'rgba(253, 78, 78, 0.36)',\n                children: majority.rep,\n            },\n        ]\n    }\n    return majority_grouped;\n}\n\nconst getBipartisanEngagement = (stats, type) => {\n    const majority = {\n        \"Score\": [{id: \"Democrat Leaning\", data: []}, {id: \"Republican Leaning\", data: []}],\n        \"Primary\": [{id: \"Democrat Leaning\", data: []}, {id: \"Republican Leaning\", data: []}],\n        \"General\": [{id: \"Democrat Leaning\", data: []}, {id: \"Republican Leaning\", data: []}],\n        \"Special\": [{id: \"Democrat Leaning\", data: []}, {id: \"Republican Leaning\", data: []}],\n    };\n    if (stats.constructor === Object && stats !== null) {\n        stats = Object.keys(stats).map(function (key) {\n            return stats[key];\n        });\n        ;\n    }\n    for (const value of stats) {\n        if (value === undefined) {\n            continue;\n        }\n        var district;\n\n        if (\"STATE_REPRESENTATIVE_DISTRICT\" in value) {\n            district = value[\"STATE_REPRESENTATIVE_DISTRICT\"];\n        } else if (\"CITY\" in value) {\n            district = value[\"CITY\"];\n        } else if (\"CONGRESSIONAL_DISTRICT\" in value) {\n            district = value[\"CONGRESSIONAL_DISTRICT\"];\n        } else {\n            district = value[\"STATE_SENATE_DISTRICT\"];\n        }\n\n        const typesOfScores = [\"Score\", \"Primary\", \"General\", \"Special\"]\n\n        var proportion = value[\"CODED_PARTY_AFFILIATION\"] * value[\"Number of Rows (Aggregated)\"];\n        if (proportion >= 0) {\n            const skew = parseFloat(value[\"CODED_PARTY_AFFILIATION\"].toFixed(3));\n\n            for (const s of typesOfScores) {\n                if (value[s] !== undefined) {\n                    majority[s][0].data.push({\n                        size: Math.round(proportion),\n                        _id: district,\n                        color: \"rgba(78, 165, 253, \" + Math.abs(0.6 + 3 * skew) + \")\",\n                        type: type,\n                        x: skew,\n                        y: value[s],\n                        population: value[\"Number of Rows (Aggregated)\"]\n                    });\n                }\n            }\n        } else {\n            const skew = parseFloat(value[\"CODED_PARTY_AFFILIATION\"].toFixed(3));\n\n            for (const s of typesOfScores) {\n                if (value[s] !== undefined) {\n                    majority[s][1].data.push({\n                        size: Math.round(Math.abs(proportion)),\n                        _id: district,\n                        color: \"rgba(253, 78, 78, \" + (0.6 + Math.abs(3 * skew)) + \")\",\n                        type: type,\n                        x: skew,\n                        y: value[s],\n                        population: value[\"Number of Rows (Aggregated)\"]\n                    });\n                }\n            }\n        }\n    }\n    return majority;\n}\n\nconst getAgeInfluences = (stats, type) => {\n    var statistics = [];\n    if (stats.constructor === Object && stats !== null) {\n        stats = Object.keys(stats).map(function (key) {\n            return stats[key];\n        });\n        ;\n    }\n    for (const value of stats) {\n        if (value === undefined) {\n            continue;\n        }\n        var district;\n\n        if (\"STATE_REPRESENTATIVE_DISTRICT\" in value) {\n            district = value[\"STATE_REPRESENTATIVE_DISTRICT\"];\n        } else if (\"CITY\" in value) {\n            district = value[\"CITY\"];\n        } else if (\"CONGRESSIONAL_DISTRICT\" in value) {\n            district = value[\"CONGRESSIONAL_DISTRICT\"];\n        } else {\n            district = value[\"STATE_SENATE_DISTRICT\"];\n        }\n\n        const skew = parseFloat(value[\"CODED_PARTY_AFFILIATION\"].toFixed(3));\n        const avg_age = parseFloat(value[\"avg_age\"].toFixed(2));\n        const score = value[\"Score\"];\n        const primary = value[\"Primary\"];\n        const general = value[\"General\"];\n        const special = value[\"Special\"];\n        var color;\n        if (skew >= 0) {\n            color = \"rgba(78, 165, 253, 1)\";\n        } else {\n            color = \"rgba(253, 78, 78, 1)\";\n        }\n        statistics.push({\n            age: avg_age,\n            _id: district,\n            color: color,\n            type: type,\n            skew: skew,\n            score: score,\n            primary: primary,\n            general: general,\n            special: special,\n            population: value[\"Number of Rows (Aggregated)\"]\n        });\n    }\n    statistics = statistics.sort((a, b) => (a.age > b.age) ? 1 : -1);\n    return statistics;\n}\n\n\nexport {\n    getCincinnatiCounties,\n    getOhioCities,\n    getOhioOutline,\n    getOhioHouseDistricts,\n    getOhioSenateDistricts,\n    getOhioZipcodes,\n    getUSHouseDistricts,\n    getBipartisanStats,\n    getBipartisanEngagement,\n    getAgeInfluences,\n}\n","import React, {Component} from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {useState, useEffect} from 'react';\nimport {ResponsiveCirclePacking} from '@nivo/circle-packing';\nimport * as d3 from \"d3\";\nimport {firebaseDatabase, getBipartisanStats} from '../utils/data'\n\nimport \"../App.css\";\nimport {callbackify} from \"util\";\n\nconst options = [\n    \"US House Districts\",\"Ohio Senate Districts\",\"Ohio House Districts\", \"Cities\",\n];\nconst defaultOption = options[0];\n\nexport default class BipartisanBubble extends Component {\n    state = {\n        stateHouseStats: null,\n        stateSenateStats: null,\n        congressionalStats: null,\n        cityStats: null,\n        selected: null,\n        labelSkip: 10,\n\n    }\n\n    componentDidMount() {\n        firebaseDatabase.ref(`summaryStats/stateHouseDistricts`).once('value').then(snapshot => snapshot.val()).then(data => this.setState({\n            stateHouseStats: getBipartisanStats(data, \"Ohio House District: \"),\n        }))\n        firebaseDatabase.ref(`summaryStats/stateSenateDistricts`).once('value').then(snapshot => snapshot.val()).then(stats => this.setState({stateSenateStats: getBipartisanStats(stats, \"Ohio Senate District: \")}));\n        firebaseDatabase.ref(`summaryStats/congressionalDistricts`).once('value').then(snapshot => snapshot.val()).then(stats => this.setState({congressionalStats: getBipartisanStats(stats, \"US House District: \"), selected: \"congressionalStats\"}));\n        firebaseDatabase.ref(`summaryStats/cities`).once('value').then(snapshot => snapshot.val()).then(stats => this.setState({cityStats: getBipartisanStats(stats, \"City: \")}));\n    }\n\n\n    render() {\n        const changeElements = (val) => {\n            if (val === \"Cities\") {\n                this.setState({selected: \"cityStats\"});\n                this.setState({labelSkip: 25});\n            } else if (val === \"Ohio House Districts\") {\n                this.setState({selected: \"stateHouseStats\"});\n                this.setState({labelSkip: 10});\n            } else if (val === \"Ohio Senate Districts\") {\n                this.setState({selected: \"stateSenateStats\"});\n                this.setState({labelSkip: 10});\n            } else {\n                this.setState({selected: \"congressionalStats\"});\n                this.setState({labelSkip: 10});\n            }\n        };\n\n        const getSelected = () => {\n            if (this.state.selected === \"cityStats\") {\n                return this.state.cityStats;\n            } else if (this.state.selected === \"stateHouseStats\") {\n                return this.state.stateHouseStats;\n            } else if (this.state.selected === \"stateSenateStats\") {\n                return this.state.stateSenateStats;\n            } else {\n                return this.state.congressionalStats;\n            }\n        };\n        return (\n                <div\n                    style={{\n                        width: '55%',\n                        paddingRight: '5%',\n                        paddingBottom: \"75px\",\n                        paddingLeft: \"5%\",\n                        height: \"calc(100vh - 150px)\",\n                        position: \"fixed\",\n                        right: \"0\",\n                        top: \"75\"\n                    }}\n                >\n                    <div style={{marginBottom: 20, paddingTop: 50, zIndex: 100}}>\n                        Party Leans for Ohio AAPIs\n                    </div>\n                    {this.state.selected &&\n                    <>\n                        <div style={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-around\"\n                        }}>\n                            <Dropdown options={options}\n                                      controlClassName=\"dropdown\"\n                                      menuClassName=\"dropdown-menu\"\n                                      onChange={(d) => changeElements(d.label)} value={defaultOption}\n                                      placeholder=\"Select an option\"/>\n                        </div>\n                        <ResponsiveCirclePacking\n                            data={getSelected()}\n                            margin={{top: 0, right: 0, bottom: 100, left: 0}}\n                            id=\"_id\"\n                            value=\"value\"\n                            colors={(d) => {\n                                return d.data.color\n                            }}\n                            childColor={{from: 'color', modifiers: [['brighter', 0.4]]}}\n                            colorBy={d => d.color}\n                            padding={4}\n                            enableLabels={true}\n                            labelsFilter={function (e) {\n                                return 2 === e.node.depth\n                            }}\n                            labelsSkipRadius={this.state.labelSkip}\n                            labelTextColor={{from: 'color', modifiers: [['darker', 2]]}}\n                            borderWidth={1}\n                            borderColor={{from: 'color', modifiers: [['darker', 0.5]]}}\n                            tooltip={(input) => (\n                                <>\n                                    {input.data.value &&\n                                    <div id=\"container\"\n                                         style={{backgroundColor: '#ccccccaa', padding: \"0.25em\"}}>\n                                        <p style={{lineHeight: 0}}>{input.data.type}{input.data._id}</p>\n                                        <p style={{lineHeight: 0}}>{input.data.skew}</p>\n                                        <p style={{lineHeight: 0}}>Population: {input.data.population}</p>\n                                    </div>\n                                    }\n\n                                    {!input.data.value &&\n                                    <div id=\"container\"\n                                         style={{backgroundColor: '#ccccccaa', padding: \"0.25em\"}}>\n                                        <p style={{lineHeight: 0}}>{input.data._id}</p>\n                                    </div>}\n                                </>\n                            )}\n                            defs={[\n                                {\n                                    id: 'lines',\n                                    type: 'patternLines',\n                                    background: 'none',\n                                    color: \"hsl(192, 70%, 50%)\",\n                                    rotation: -45,\n                                    lineWidth: 0,\n                                    spacing: 0,\n                                    opacity: 0\n                                }\n                            ]}\n                            fill={[{match: {depth: 0}, id: 'lines'}]}\n                        />\n                    </>\n                    }\n                </div>\n        );\n    }\n\n}\n","import React, {Component} from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {useState, useEffect} from 'react';\nimport {ResponsiveScatterPlot} from '@nivo/scatterplot';\nimport * as d3 from \"d3\";\nimport {firebaseDatabase, getBipartisanEngagement} from '../utils/data'\n\nimport \"../App.css\";\nimport {callbackify} from \"util\";\n\nconst areaOptions = [\n    \"US House Districts\", \"Ohio Senate Districts\",\"Ohio House Districts\",  \"Cities\",\n];\nconst defaultAreaOption = areaOptions[0];\n\nconst scoreOptions = [\n    \"All Elections\", \"Primary Elections\", \"General Elections\", \"Special Elections\",\n];\nconst defaultScoreOption = scoreOptions[0];\n\nexport default class BipartisanEngagement extends Component {\n    state = {\n        stateHouseStats: null,\n        stateSenateStats: null,\n        congressionalStats: null,\n        cityStats: null,\n        selectedArea: null,\n        selectedScore: null,\n\n    }\n\n    componentDidMount() {\n        firebaseDatabase.ref(`summaryStats/stateHouseDistricts`).once('value').then(snapshot => snapshot.val()).then(data => this.setState({\n            stateHouseStats: getBipartisanEngagement(data, \"Ohio House District: \"),\n            selectedScore: \"Score\"\n        }))\n        firebaseDatabase.ref(`summaryStats/stateSenateDistricts`).once('value').then(snapshot => snapshot.val()).then(stats => this.setState({stateSenateStats: getBipartisanEngagement(stats, \"Ohio Senate District: \")}));\n        firebaseDatabase.ref(`summaryStats/congressionalDistricts`).once('value').then(snapshot => snapshot.val()).then(stats => this.setState({congressionalStats: getBipartisanEngagement(stats, \"US House District: \"), selectedArea: \"congressionalStats\",}));\n        firebaseDatabase.ref(`summaryStats/cities`).once('value').then(snapshot => snapshot.val()).then(stats => this.setState({cityStats: getBipartisanEngagement(stats, \"City: \")}));\n    }\n\n\n    render() {\n        const changeAreaElements = (val) => {\n            if (val === \"Cities\") {\n                this.setState({selectedArea: \"cityStats\"});\n            } else if (val === \"Ohio House Districts\") {\n                this.setState({selectedArea: \"stateHouseStats\"});\n            } else if (val === \"Ohio Senate Districts\") {\n                this.setState({selectedArea: \"stateSenateStats\"});\n            } else {\n                this.setState({selectedArea: \"congressionalStats\"});\n            }\n        };\n\n        const changeScoreElements = (val) => {\n            if (val === \"All Elections\") {\n                this.setState({selectedScore: \"Score\"});\n            } else if (val === \"Primary Elections\") {\n                this.setState({selectedScore: \"Primary\"});\n            } else if (val === \"General Elections\") {\n                this.setState({selectedScore: \"General\"});\n            } else {\n                this.setState({selectedScore: \"Special\"});\n            }\n        };\n\n        const getSelected = () => {\n            if (this.state.selectedArea === \"cityStats\") {\n                return this.state.cityStats[this.state.selectedScore];\n            } else if (this.state.selectedArea === \"stateHouseStats\") {\n                return this.state.stateHouseStats[this.state.selectedScore];\n            } else if (this.state.selectedArea === \"stateSenateStats\") {\n                return this.state.stateSenateStats[this.state.selectedScore];\n            } else {\n                return this.state.congressionalStats[this.state.selectedScore];\n            }\n        };\n        if (this.state.cityStats) {\n            console.log(this.state.cityStats[\"Special\"]);\n        }\n        return (\n            <div\n                style={{\n                    width: '55%',\n                    paddingRight: '5%',\n                    paddingBottom: \"75px\",\n                    paddingLeft: \"5%\",\n                    height: \"calc(100vh - 150px)\",\n                    position: \"fixed\",\n                    right: 0,\n                    top: 75,\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                }}\n            >\n                <div style={{marginBottom: 20, paddingTop: 50, zIndex: 100}}>\n                    Party Relationships with Ohio AAPI Voter Turnout\n                </div>\n                {this.state.selectedArea && this.state.selectedScore &&\n                <>\n                    <div style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-around\"\n                    }}>\n                        <Dropdown style={{width: 200}}\n                                  options={areaOptions}\n                                  controlClassName=\"dropdown\"\n                                  menuClassName=\"dropdown-menu\"\n                                  onChange={(d) => changeAreaElements(d.label)}\n                                  value={defaultAreaOption} placeholder=\"Select an option\"/>\n                        <Dropdown style={{width: 200}}\n                                  options={scoreOptions}\n                                  controlClassName=\"dropdown\"\n                                  menuClassName=\"dropdown-menu\"\n                                  onChange={(d) => changeScoreElements(d.label)}\n                                  value={defaultScoreOption} placeholder=\"Select an option\"/>\n                    </div>\n                    <ResponsiveScatterPlot\n                        animate={(this.state.selectedArea === 'cityStats') ? false : true}\n                        data={getSelected()}\n                        colors={(d) => d.color}\n                        style={{color: \"white\"}}\n                        nodeSize={12}\n                        margin={{top: 50, right: 80, bottom: 100, left: 80}}\n                        xScale={{type: 'linear', min: 'auto', max: 'auto'}}\n                        xFormat={function (e) {\n                            return e\n                        }}\n                        yScale={{type: 'linear', min: 'auto', max: 'auto'}}\n                        yFormat={function (e) {\n                            return e\n                        }}\n                        blendMode=\"multiply\"\n                        axisTop={null}\n                        axisFormat={{color: \"white\"}}\n                        tooltip={({node}) => (\n                            <div\n                                style={{\n                                    color: \"white\",\n                                    background: 'rgb(204,204,204,1)',\n                                    padding: '12px 16px',\n                                }}\n                            >\n                                <strong>\n                                    {node.data.type} {node.data._id}\n                                </strong>\n                                <br/>\n                                {`Bipartisan Skew: ${node.data.x}`}\n                                <br/>\n                                {`Engagement: ${node.data.y.toFixed(3)}`}\n                            </div>\n                        )}\n                        axisRight={{\n                            orient: 'left',\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                        }}\n\n                        axisBottom={{\n                            orient: 'bottom',\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                            legend: 'Bipartisan Skew',\n                            legendPosition: 'middle',\n                            legendOffset: 46\n                        }}\n                        axisLeft={{\n                            orient: 'left',\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                            legend: 'Average Voter Engagement Score',\n                            legendPosition: 'middle',\n                            legendOffset: -60\n                        }}\n                    />\n                </>\n                }\n            </div>\n        )\n    }\n\n    ;\n\n}\n","import React, {Component} from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport {useState, useEffect} from 'react';\nimport {ResponsiveBar} from '@nivo/bar'\nimport * as d3 from \"d3\";\nimport {firebaseDatabase, getAgeInfluences} from '../utils/data'\n\nimport \"../App.css\";\nimport {callbackify} from \"util\";\n\nconst areaOptions = [\n    \"US House Districts\", \"Ohio Senate Districts\", \"Ohio House Districts\",\n];\nconst defaultAreaOption = areaOptions[0];\n\nconst scoreOptions = [\n    \"All Elections\", \"Primary Elections\", \"General Elections\", \"Special Elections\",\n];\nconst defaultScoreOption = scoreOptions[0];\n\nexport default class AgeInfluences extends Component {\n    state = {\n        stateHouseStats: null,\n        stateSenateStats: null,\n        congressionalStats: null,\n        cityStats: null,\n        selectedArea: null,\n        selectedScore: null,\n        hoveringOver: null,\n    }\n\n    componentDidMount() {\n        firebaseDatabase.ref(`summaryStats/stateHouseDistricts`).once('value').then(snapshot => snapshot.val()).then(data => this.setState({\n            stateHouseStats: getAgeInfluences(data, \"Ohio House District: \"),\n            selectedScore: \"score\"\n        }))\n        firebaseDatabase.ref(`summaryStats/stateSenateDistricts`).once('value').then(snapshot => snapshot.val()).then(stats => this.setState({stateSenateStats: getAgeInfluences(stats, \"Ohio Senate District: \")}));\nfirebaseDatabase.ref(`summaryStats/congressionalDistricts`).once('value').then(snapshot => snapshot.val()).then(stats => this.setState({congressionalStats: getAgeInfluences(stats, \"US House District: \"), selectedArea: \"congressionalStats\",}));\n    }\n\n    render() {\n        const changeAreaElements = (val) => {\n            if (val === \"Cities\") {\n                this.setState({selectedArea: \"cityStats\"});\n            } else if (val === \"Ohio House Districts\") {\n                this.setState({selectedArea: \"stateHouseStats\"});\n            } else if (val === \"Ohio Senate Districts\") {\n                this.setState({selectedArea: \"stateSenateStats\"});\n            } else {\n                this.setState({selectedArea: \"congressionalStats\"});\n            }\n        };\n\n        const changeScoreElements = (val) => {\n            if (val === \"All Elections\") {\n                this.setState({selectedScore: \"score\"});\n            } else if (val === \"Primary Elections\") {\n                this.setState({selectedScore: \"primary\"});\n            } else if (val === \"General Elections\") {\n                this.setState({selectedScore: \"general\"});\n            } else {\n                this.setState({selectedScore: \"special\"});\n            }\n        };\n\n        const getSelected = () => {\n            if (this.state.selectedArea === \"cityStats\") {\n                return this.state.cityStats;\n            } else if (this.state.selectedArea === \"stateHouseStats\") {\n                return this.state.stateHouseStats;\n            } else if (this.state.selectedArea === \"stateSenateStats\") {\n                return this.state.stateSenateStats;\n            } else {\n                return this.state.congressionalStats;\n            }\n        };\n        return (\n            <>\n                <div\n                    style={{\n                        width: '55%',\n                        paddingRight: '5%',\n                        paddingBottom: \"75px\",\n                        paddingLeft: \"5%\",\n                        height: \"calc(43vh - 150px)\",\n                        position: \"fixed\",\n                        right: \"0\",\n                        top: \"75\"\n                    }}\n                >\n                    <div style={{marginBottom: 20, zIndex: 100}}>\n                        Age and Voter Behavior\n                    </div>\n                    {this.state.selectedArea && this.state.selectedScore &&\n                    <>\n                        <div style={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-around\",\n                            marginBottom: 20\n                        }}>\n                            <Dropdown style={{width: 200}}\n                                      options={areaOptions}\n                                      controlClassName=\"dropdown\"\n                                      menuClassName=\"dropdown-menu\"\n                                      onChange={(d) => changeAreaElements(d.label)} value={defaultAreaOption}\n                                      placeholder=\"Select an option\"/>\n                            <Dropdown style={{width: 200}}\n                                      options={scoreOptions}\n                                      controlClassName=\"dropdown\"\n                                      menuClassName=\"dropdown-menu\"\n                                      onChange={(d) => changeScoreElements(d.label)} value={defaultScoreOption}\n                                      placeholder=\"Select an option\"/>\n                        </div>\n                        <ResponsiveBar\n                            data={getSelected()}\n                            keys={[\"age\"]}\n                            indexBy=\"_id\"\n                            margin={{top: 10, right: 60, bottom: 10, left: 60}}\n                            padding={0.3}\n                            valueScale={{type: 'linear'}}\n                            indexScale={{type: 'linear', round: true}}\n                            colors={(d) => {return d.index === this.state.hoveringOver ? \"#FFD700\" : \"#A32CC4\"}}\n                            borderColor={{from: 'color', modifiers: [['darker', 1.6]]}}\n                            axisTop={null}\n                            axisRight={null}\n                            onMouseEnter={(_data, event) => {\n                              this.setState({hoveringOver: _data.index});\n                            }}\n                            onMouseLeave={(_data, event) => {\n                              this.setState({hoveringOver: null});\n                            }}\n                            axisBottom={null}\n                            tooltip={(node) => (\n                              <div\n                                  style={{\n                                      color: \"white\",\n                                      background: 'rgb(204,204,204,1)',\n                                      padding: '12px 16px',\n                                  }}\n                              >\n                                  <strong>\n                                      {node.data.type} {node.data._id}\n                                  </strong>\n                                  <br/>\n                                  {`Average Age: ${node.data.age}`}\n                              </div>\n                          )}\n                            axisLeft={{\n                                tickSize: 5,\n                                tickPadding: 5,\n                                tickRotation: 0,\n                                legend: 'Average Age',\n                                legendPosition: 'middle',\n                                legendOffset: -40\n                            }}\n                            labelSkipWidth={40}\n                            labelSkipHeight={12}\n                            labelTextColor={{from: 'color', modifiers: [['darker', 1.6]]}}\n                            animate={true}\n                            motionStiffness={90}\n                            motionDamping={15}/>\n                    </>\n                    }\n\n                    {this.state.selectedArea && this.state.selectedScore &&\n                    <ResponsiveBar\n                        data={getSelected()}\n                        keys={[\"skew\"]}\n                        indexBy=\"_id\"\n                        margin={{top: 10, right: 60, bottom: 10, left: 60}}\n                        padding={0.3}\n                        valueScale={{type: 'linear'}}\n                        indexScale={{type: 'band', round: true}}\n                        colors={(d) => {return d.index === this.state.hoveringOver ? \"#FFD700\" : d.data.color}}\n                        borderColor={{from: 'color', modifiers: [['darker', 1.6]]}}\n                        axisTop={null}\n                        axisRight={null}\n                        axisBottom={null}\n                        onMouseEnter={(_data, event) => {\n                          this.setState({hoveringOver: _data.index});\n                        }}\n                        onMouseLeave={(_data, event) => {\n                          this.setState({hoveringOver: null});\n                        }}\n                        tooltip={(node) => (\n                          <div\n                              style={{\n                                  color: \"white\",\n                                  background: 'rgb(204,204,204,1)',\n                                  padding: '12px 16px',\n                              }}\n                          >\n                              <strong>\n                                  {node.data.type} {node.data._id}\n                              </strong>\n                              <br/>\n                              {`Average Age: ${node.data.age}`}\n                              <br/>\n                              {`Bipartisan Skew: ${node.data.skew}`}\n                          </div>\n                      )}\n                        axisLeft={{\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                            legend: 'Bipartisan Skew',\n                            legendPosition: 'middle',\n                            legendOffset: -50\n                        }}\n                        labelSkipWidth={40}\n                        labelSkipHeight={12}\n                        labelTextColor={{from: 'color', modifiers: [['darker', 1.6]]}}\n                        animate={true}\n                        motionStiffness={90}\n                        motionDamping={15}/>\n                    }\n                    {this.state.selectedArea && this.state.selectedScore &&\n                    <ResponsiveBar\n                        data={getSelected()}\n                        keys={[this.state.selectedScore]}\n                        indexBy=\"_id\"\n                        margin={{top: 10, right: 60, bottom: 10, left: 60}}\n                        padding={0.3}\n                        valueScale={{type: 'linear'}}\n                        indexScale={{type: 'band', round: true}}\n                        colors={(d) => {return d.index === this.state.hoveringOver ? \"#FFD700\" : \"#03C04A\"}}\n                        borderColor={{from: 'color', modifiers: [['darker', 1.6]]}}\n                        axisTop={null}\n                        axisRight={null}\n                        axisBottom={null}\n                        onMouseEnter={(_data, event) => {\n                          this.setState({hoveringOver: _data.index});\n                        }}\n                        onMouseLeave={(_data, event) => {\n                          this.setState({hoveringOver: null});\n                        }}\n                        tooltip={(node) => (\n                          <div\n                              style={{\n                                  color: \"white\",\n                                  background: 'rgb(204,204,204,1)',\n                                  padding: '12px 16px',\n                              }}\n                          >\n                              <strong>\n                                  {node.data.type} {node.data._id}\n                              </strong>\n                              <br/>\n                              {`Average Age: ${node.data.age}`}\n                              <br/>\n                              {`Engagement Score: ${node.data[this.state.selectedScore]}`}\n                          </div>\n                      )}\n                        axisLeft={{\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                            legend: 'Election Engagement Score',\n                            legendPosition: 'middle',\n                            legendOffset: -50\n                        }}\n                        labelSkipWidth={40}\n                        labelSkipHeight={40}\n                        labelTextColor={{from: 'color', modifiers: [['darker', 1.6]]}}\n                        animate={true}\n                        motionStiffness={90}\n                        motionDamping={15}\n                    />\n                    }\n                </div>\n            </>\n        )\n    };\n\n}\n","import React, {Component} from \"react\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { useState, useEffect } from 'react';\nimport { ResponsiveCirclePacking } from '@nivo/circle-packing';\nimport * as d3 from \"d3\";\nimport {firebaseDatabase} from '../utils/data';\nimport BipartisanBubble from \"../components/BipartisanBubble\"\nimport BipartisanEngagement from \"../components/BipartisanEngagement\"\nimport AgeInfluences from \"../components/AgeInfluences\"\n\nimport \"../App.css\";\nimport { callbackify } from \"util\";\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  }\n\nconst useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nexport default class Visualization extends Component {\n\n    render() {\n      console.log(this.props.vizId)\n      return (\n        <>\n          {this.props.vizId === 0 && <BipartisanBubble />}\n          {this.props.vizId === 1 && <BipartisanEngagement />}\n          {this.props.vizId === 2 && <AgeInfluences />}\n          <div></div>\n        </>\n      )\n    }\n\n}\n","import React, {Component} from \"react\";\nimport TextSection from \"../components/TextSection\";\nimport Visualization from \"../components/Visualization\";\nimport { Waypoint } from 'react-waypoint';\nimport { zip } from \"d3\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleDoubleDown} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class StoryTeller extends Component {\n    state = {\n      vizId : 1,\n    }\n\n    render () {\n      return (\n        <>\n\n          <div style={{flexDirection:\"row\", display:\"flex\"}}>\n              <div style={{width:'30%', marginBottom:'10vh', marginRight:'0', paddingLeft:'5%'}}>\n              <Waypoint\n                  onEnter={() => this.setState({vizId: -1})}\n                  onEnter={() => this.setState({vizId: -1,})}\n                  bottomOffset=\"49.9%\"\n                  topOffset=\"49.9%\"\n              >\n                        <div style={{width:'50vw', height: \"calc(120vh - 150px)\", marginBottom:'0vh', marginRight:'0', paddingLeft:'20vw', paddingRight:\"20vw\", marginRight:\"5vw\"}}>\n                            <TextSection textId={0} height={\"50vh\"} />\n                            <div style={{\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                color: \"#bbb\",\n                                fontSize: 50\n                            }}>\n                                <p>\n                                    <FontAwesomeIcon icon={faAngleDoubleDown} />\n                                </p>\n                            </div>\n                        </div>\n              </Waypoint>\n                  <Waypoint\n                      onEnter={() => this.setState({vizId: 0,})}\n                      bottomOffset=\"49.9%\"\n                      topOffset=\"49.9%\"\n                  >\n                      <div><TextSection textId={1} height={\"60vh\"} /></div>\n                  </Waypoint>\n\n                  <Waypoint\n                      onEnter={() => this.setState({vizId: 1,})}\n                      bottomOffset=\"49.9%\"\n                      topOffset=\"49.9%\"\n                  >\n                      <div><TextSection textId={2} height={\"100vh\"} /></div>\n                  </Waypoint>\n\n                  <Waypoint\n                      onEnter={() => this.setState({vizId: 2,})}\n                      bottomOffset=\"49.9%\"\n                      topOffset=\"49.9%\"\n                  >\n                      <div><TextSection textId={3} height={\"50vh\"} height={\"100vh\"} /></div>\n                  </Waypoint>\n              </div>\n              <div id=\"container\">\n                <Visualization vizId={this.state.vizId} />\n              </div>\n          </div>\n        </>\n\n    )};\n\n\n}\n","import React, {Component} from \"react\";\nimport TextSection from \"../components/TextSection\";\nimport StoryTeller from \"../components/StoryTeller\";\n\nexport default class StoryPage extends Component {\n    render() {\n        return (\n            <>\n                <StoryTeller />\n            </>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Loading extends Component {\n    render() {\n        return (\n            <div style={{\n                width: 500,\n                height: 500,\n                margin: 10,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                color: \"#bbb\",\n                fontSize: 20\n            }}>\n                <p>\n                    <FontAwesomeIcon icon={faSpinner} pulse/> Loading...\n                </p>\n            </div>\n        )\n    }\n}\n","import * as d3 from \"d3\";\nimport {LegendLinear} from \"@visx/legend\";\nimport {AreaClosed} from \"@visx/shape\";\nimport {LinearGradient} from \"@visx/gradient\";\nimport {\n    elementOrEmpty,\n    jsons2arrays,\n    getHeaderValue,\n    isJsons,\n    jsonsHeaders,\n    jsons2csv,\n    arrays2csv\n} from \"react-csv/src/core\";\n\nconst red = \"#ff3a3a\"\nconst blue = \"#2462ff\"\n\nconst colorScale = d3.scaleLinear()\n    .domain([-1, 1])\n    .range([red, blue])\n\nconst legendPositionScale = d3.scaleLinear()\n    .domain([-1, 1])\n    .range([110, 490]) // offset by 2 for width of rectangle\n\nexport const getLocalityColor = value => colorScale(value)\n\nexport const LocalityColorLegend = props => (\n    <svg width={400} height={100}>\n        <LinearGradient id=\"gradient\" from={red} to={blue} vertical={false}/>\n        <rect x={10} y={30} width={380} height={24} fill=\"url('#gradient')\"/>\n        <text x={10} y={75} textAnchor={\"start\"} fill={\"white\"}>Rep</text>\n        <rect x={199} y={30} width={2} height={24} textAnchor={\"middle\"} fill={\"black\"}>0</rect>\n        <text x={390} y={75} textAnchor={\"end\"} fill={\"white\"}>Dem</text>\n        {props.position !== null &&\n        <>\n            <text x={legendPositionScale(props.position)} y={20} fill={\"white\"} textAnchor={\"middle\"}>\n                {Math.abs(props.position).toFixed(4)}\n            </text>\n            <rect x={legendPositionScale(props.position) - 1} y={28} width={2} height={26} fill=\"white\"/>\n        </>\n        }\n    </svg>\n)\n\nexport const joiner = (data) => {\n    return data\n        .filter(e => e)\n        .map(\n            row => row\n                .map((element) => elementOrEmpty(element))\n                .map(column => `\"${column}\"`)\n                .join(',')\n        )\n        .join(`\\n`);\n};\n\nexport const isSafari = () => /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nexport const buildURI = (data) => {\n    const csv = arrays2csv(data.slice(1), data[0],',', '\"')\n    console.log(csv)\n    const type = isSafari() ? 'application/csv' : 'text/csv';\n    const blob = new Blob([csv], {type});\n    const dataURI = `data:${type};charset=utf-8,${csv}`;\n\n    const URL = window.URL || window.webkitURL;\n\n    return (typeof URL.createObjectURL === 'undefined')\n        ? dataURI\n        : URL.createObjectURL(blob);\n}\n","import React, {Component} from \"react\";\nimport {firebaseDatabase, getOhioCities, getOhioOutline, getOhioZipcodes} from \"../utils/data\";\nimport {ComposableMap, Geographies, Geography} from \"react-simple-maps\";\nimport {geoEquirectangular} from \"d3-geo\";\nimport ReactTooltip from \"react-tooltip\";\nimport Loading from \"./Loading\";\nimport {getLocalityColor, LocalityColorLegend} from \"../utils/calculations\";\n\nexport default class OhioCities extends Component {\n    state = {\n        ohioCities: null,\n        ohioOutline: null,\n        ohioZipcodes: null,\n        projection: null,\n        clickedCity: null,\n        clickedCityGeography: null,\n        clickedZipcode: null,\n        tooltipContent: \"\",\n        loading: true,\n        hoveringSkew: null\n    }\n\n    componentDidMount() {\n        const promises = [getOhioCities(), getOhioOutline(), getOhioZipcodes()];\n        Promise.all(promises).then(async ([ohioCities, ohioOutline, ohioZipcodes]) => {\n            await firebaseDatabase.ref('summaryStats/cities').get().then(snapshot => {\n                snapshot.forEach(citySnapshot => {\n                    this.setState({[citySnapshot.key]: citySnapshot.val().CODED_PARTY_AFFILIATION})\n                })\n            })\n            await firebaseDatabase.ref('summaryStats/zipcodes').get().then(snapshot => {\n                snapshot.forEach(zipcodeSnapshot => {\n                    this.setState({[zipcodeSnapshot.key]: zipcodeSnapshot.val().CODED_PARTY_AFFILIATION})\n                })\n            })\n            this.setState({\n                ohioCities,\n                ohioOutline,\n                ohioZipcodes,\n                projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], ohioOutline),\n                loading: false\n            })\n            this.props.setLoadingStatData(false)\n        })\n    }\n\n    handleGeographyClicked = geography => {\n        if (geography.properties.NAME === this.state.clickedCity) {\n            this.zoomToOhio()\n        } else {\n            this.zoomToCity(geography)\n        }\n    }\n\n    zoomToOhio = () => {\n        this.setState({\n            projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], this.state.ohioOutline),\n            clickedCity: null,\n            clickedCityGeography: null\n        })\n        this.props.setStatData(null, null)\n    }\n\n    zoomToCity = geography => {\n        this.setState({loading: true})\n        this.props.setLoadingStatData(true)\n        firebaseDatabase.ref(`summaryStats/cities/${geography.properties.NAME.toLocaleUpperCase()}`)\n            .once('value')\n            .then(snapshot => snapshot.val())\n            .then(data => {\n                this.setState({\n                    projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], geography),\n                    clickedCity: geography.properties.NAME,\n                    clickedCityGeography: geography,\n                    clickedZipcode: null,\n                    loading: false\n                })\n                this.props.setStatData(data, 'cities')\n            })\n    }\n\n    handleZipcodeClicked = geography => {\n        if (geography.properties.ZCTA5CE10 !== this.state.clickedZipcode) {\n            this.setState({loading: true})\n            this.props.setLoadingStatData(true)\n            firebaseDatabase.ref(`summaryStats/zipcodes/${geography.properties.ZCTA5CE10}`)\n                .once('value')\n                .then(snapshot => snapshot.val())\n                .then(data => {\n                    this.props.setStatData(data || {\n                        RESIDENTIAL_ZIP: geography.properties.ZCTA5CE10,\n                        noData: true\n                    }, \"zipcode\")\n                    this.setState({\n                        clickedZipcode: geography.properties.ZCTA5CE10,\n                        projection: geography && geoEquirectangular().fitExtent([[20, 20], [480, 380]], geography),\n                        loading: false\n                    })\n                })\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <Loading/>\n            )\n        }\n        return (\n            this.state.ohioCities &&\n            <>\n                <ComposableMap projection={this.state.projection}\n                               data-tip={this.state.tooltipContent}\n                               width={500}\n                               height={400}\n                               style={{margin: 10}}>\n                    <Geographies geography={this.state.ohioOutline}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       fill=\"transparent\"\n                                       stroke=\"black\"\n                            />\n                        )}\n                    </Geographies>\n                    {this.state.clickedCity &&\n                    <Geographies geography={this.state.ohioZipcodes}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       className=\"hover-geography\"\n                                       stroke=\"black\"\n                                       strokeWidth={this.state.clickedZipcode === geography.properties.ZCTA5CE10 ? 2 : 1}\n                                       fill={getLocalityColor(this.state[geography.properties.ZCTA5CE10])}\n                                       onClick={() => this.handleZipcodeClicked(geography)}\n                                       onMouseEnter={() => this.setState({\n                                           tooltipContent: `<p>Zipcode ${geography.properties.ZCTA5CE10}</p>`,\n                                           hoveringSkew: this.state[geography.properties.ZCTA5CE10]\n                                       })}\n                                       onMouseLeave={() => this.setState({\n                                           tooltipContent: \"\",\n                                           hoveringSkew: null\n                                       })}\n                            />\n                        )}\n                    </Geographies>\n                    }\n                    <Geographies geography={this.state.ohioCities}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       className=\"hover-geography\"\n                                       fill={this.state.clickedCity ?\n                                           \"none\"\n                                           :\n                                           getLocalityColor(this.state[geography.properties.NAME.toLocaleUpperCase()])\n                                       }\n                                       stroke=\"black\"\n                                       strokeWidth={geography.properties.NAME === this.state.clickedCity ? 2 : 1}\n                                       onClick={() => this.handleGeographyClicked(geography)}\n                                       onMouseEnter={() => this.setState({\n                                           tooltipContent: `<p>${geography.properties.NAME}</p>`,\n                                           hoveringSkew: this.state[geography.properties.NAME.toLocaleUpperCase()]\n                                       })}\n                                       onMouseLeave={() => this.setState({\n                                           tooltipContent: \"\",\n                                           hoveringSkew: null\n                                       })}\n                            />\n                        )}\n                    </Geographies>\n                </ComposableMap>\n                <div>\n                    Party Skew\n                </div>\n                <LocalityColorLegend position={this.state.hoveringSkew}/>\n                {this.state.clickedCity && !this.state.clickedZipcode &&\n                <button onClick={this.zoomToOhio}>\n                    Back to Ohio\n                </button>\n                }\n                {this.state.clickedZipcode &&\n                <button\n                    onClick={() => this.zoomToCity(this.state.clickedCityGeography)}>\n                    Back to {this.state.clickedCity}\n                </button>\n                }\n                <ReactTooltip html={true}>{this.state.tooltipContent}</ReactTooltip>\n            </>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {firebaseDatabase, getOhioSenateDistricts, getOhioZipcodes} from \"../utils/data\";\nimport {ComposableMap, Geographies, Geography} from \"react-simple-maps\";\nimport {geoEquirectangular} from \"d3-geo\";\nimport ReactTooltip from \"react-tooltip\";\nimport Loading from \"./Loading\";\nimport {getLocalityColor, LocalityColorLegend} from \"../utils/calculations\";\n\nexport default class OhioSenateDistricts extends Component {\n    state = {\n        ohioSenateDistricts: null,\n        ohioZipcodes: null,\n        projection: null,\n        clickedDistrict: null,\n        clickedDistrictGeography: null,\n        clickedZipcode: null,\n        tooltipContent: \"\",\n        loading: true,\n        hoveringSkew: null\n    }\n\n    componentDidMount() {\n        const promises = [getOhioSenateDistricts(), getOhioZipcodes()];\n        Promise.all(promises).then(async ([ohioSenateDistricts, ohioZipcodes]) => {\n            await firebaseDatabase.ref('summaryStats/stateSenateDistricts').get().then(snapshot => {\n                snapshot.forEach(districtSnapshot => {\n                    this.setState({[districtSnapshot.key]: districtSnapshot.val().CODED_PARTY_AFFILIATION})\n                })\n            })\n            await firebaseDatabase.ref('summaryStats/zipcodes').get().then(snapshot => {\n                snapshot.forEach(zipcodeSnapshot => {\n                    this.setState({[zipcodeSnapshot.key]: zipcodeSnapshot.val().CODED_PARTY_AFFILIATION})\n                })\n            })\n            this.setState({\n                ohioSenateDistricts,\n                ohioZipcodes,\n                projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], ohioSenateDistricts),\n                loading: false\n            })\n            this.props.setLoadingStatData(false)\n        })\n    }\n\n    handleGeographyClicked = geography => {\n        if (geography.properties.DISTRICT === this.state.clickedDistrict) {\n            this.zoomToOhio()\n        } else {\n            this.zoomToDistrict(geography)\n        }\n    }\n\n    zoomToOhio = () => {\n        this.setState({\n            projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], this.state.ohioSenateDistricts),\n            clickedDistrict: null,\n            clickedDistrictGeography: null\n        })\n        this.props.setStatData(null, null)\n    }\n\n    zoomToDistrict = (geography) => {\n        this.setState({loading: true})\n        this.props.setLoadingStatData(true)\n        firebaseDatabase.ref(`summaryStats/stateSenateDistricts/${geography.properties.DISTRICT}`)\n            .once('value')\n            .then(snapshot => snapshot.val())\n            .then(data => {\n                this.setState({\n                    projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], geography),\n                    clickedDistrict: geography.properties.DISTRICT,\n                    clickedDistrictGeography: geography,\n                    clickedZipcode: null,\n                    loading: false\n                })\n                this.props.setStatData(data, \"stateSenateDistrict\")\n            })\n    }\n\n    handleZipcodeClicked = geography => {\n        if (geography.properties.ZCTA5CE10 !== this.state.clickedZipcode) {\n            this.setState({loading: true})\n            this.props.setLoadingStatData(true)\n            firebaseDatabase.ref(`summaryStats/zipcodes/${geography.properties.ZCTA5CE10}`)\n                .once('value')\n                .then(snapshot => snapshot.val())\n                .then(data => {\n                    this.props.setStatData(data || {\n                        RESIDENTIAL_ZIP: geography.properties.ZCTA5CE10,\n                        noData: true\n                    }, \"zipcode\")\n                    this.setState({\n                        clickedZipcode: geography.properties.ZCTA5CE10,\n                        projection: geography && geoEquirectangular().fitExtent([[20, 20], [480, 380]], geography),\n                        loading: false\n                    })\n                })\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <Loading/>\n            )\n        }\n        return (\n            this.state.ohioSenateDistricts &&\n            <>\n                <ComposableMap projection={this.state.projection}\n                               data-tip={this.state.tooltipContent}\n                               width={500}\n                               height={400}\n                               style={{margin: 10}}>\n                    {this.state.clickedDistrict &&\n                    <Geographies geography={this.state.ohioZipcodes}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       className=\"hover-geography\"\n                                       stroke=\"black\"\n                                       strokeWidth={this.state.clickedZipcode === geography.properties.ZCTA5CE10 ? 2 : 1}\n                                       fill={getLocalityColor(this.state[geography.properties.ZCTA5CE10])}\n                                       onClick={() => this.handleZipcodeClicked(geography)}\n                                       onMouseEnter={() => this.setState({\n                                           tooltipContent: `<p>Zipcode ${geography.properties.ZCTA5CE10}</p>`,\n                                           hoveringSkew: this.state[geography.properties.ZCTA5CE10]\n                                       })}\n                                       onMouseLeave={() => this.setState({\n                                           tooltipContent: \"\",\n                                           hoveringSkew: null\n                                       })}\n                            />\n                        )}\n                    </Geographies>\n                    }\n                    <Geographies geography={this.state.ohioSenateDistricts}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       className=\"hover-geography\"\n                                       fill={this.state.clickedDistrict ?\n                                           \"none\"\n                                           :\n                                           getLocalityColor(this.state[geography.properties.DISTRICT])\n                                       }\n                                       stroke=\"black\"\n                                       strokeWidth={geography.properties.DISTRICT === this.state.clickedDistrict ? 2 : 1}\n                                       onClick={() => this.handleGeographyClicked(geography)}\n                                       onMouseEnter={() => this.setState({\n                                           tooltipContent: `<p>District ${geography.properties.DISTRICT}</p><p>Incumbent: ${geography.properties.FIRSTNAME} ${geography.properties.LASTNAME} (${geography.properties.PARTY})</p>`,\n                                           hoveringSkew: this.state[geography.properties.DISTRICT]\n                                       })}\n                                       onMouseLeave={() => this.setState({\n                                           tooltipContent: \"\",\n                                           hoveringSkew: null\n                                       })}\n                            />\n                        )}\n                    </Geographies>\n                </ComposableMap>\n                <div>\n                    Party Skew\n                </div>\n                <LocalityColorLegend position={this.state.hoveringSkew}/>\n                {this.state.clickedDistrict && !this.state.clickedZipcode &&\n                <button onClick={this.zoomToOhio}>\n                    Back to Ohio\n                </button>\n                }\n                {this.state.clickedZipcode &&\n                <button\n                    onClick={() => this.zoomToDistrict(this.state.clickedDistrictGeography)}>\n                    Back to District {this.state.clickedDistrict}\n                </button>\n                }\n                <ReactTooltip html={true}>{this.state.tooltipContent}</ReactTooltip>\n            </>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {firebaseDatabase, getOhioZipcodes, getUSHouseDistricts} from \"../utils/data\";\nimport {ComposableMap, Geographies, Geography} from \"react-simple-maps\";\nimport {geoEquirectangular} from \"d3-geo\";\nimport ReactTooltip from \"react-tooltip\";\nimport Loading from \"./Loading\";\nimport {getLocalityColor, LocalityColorLegend} from \"../utils/calculations\";\n\nexport default class USHouseDistricts extends Component {\n    state = {\n        usHouseDistricts: null,\n        ohioZipcodes: null,\n        projection: null,\n        clickedDistrict: null,\n        clickedDistrictGeography: null,\n        clickedZipcode: null,\n        tooltipContent: \"\",\n        loading: true,\n        hoveringSkew: null\n    }\n\n    componentDidMount() {\n        const promises = [getUSHouseDistricts(), getOhioZipcodes()];\n        Promise.all(promises).then(async ([usHouseDistricts, ohioZipcodes]) => {\n            await firebaseDatabase.ref('summaryStats/congressionalDistricts').get().then(snapshot => {\n                snapshot.forEach(districtSnapshot => {\n                    this.setState({[districtSnapshot.key]: districtSnapshot.val().CODED_PARTY_AFFILIATION})\n                })\n            })\n            await firebaseDatabase.ref('summaryStats/zipcodes').once('value').then(snapshot => {\n                snapshot.forEach(zipcodeSnapshot => {\n                    this.setState({[zipcodeSnapshot.key]: zipcodeSnapshot.val().CODED_PARTY_AFFILIATION})\n                })\n            })\n            this.setState({\n                usHouseDistricts,\n                ohioZipcodes,\n                projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], usHouseDistricts),\n                loading: false\n            })\n            this.props.setLoadingStatData(false)\n        })\n    }\n\n    handleGeographyClicked = geography => {\n        if (geography.properties.DISTRICT === this.state.clickedDistrict) {\n            this.zoomToOhio()\n        } else {\n            this.zoomToDistrict(geography)\n        }\n    }\n\n    zoomToOhio = () => {\n        this.setState({\n            projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], this.state.usHouseDistricts),\n            clickedDistrict: null,\n            clickedDistrictGeography: null\n        })\n        this.props.setStatData(null, null)\n    }\n\n    zoomToDistrict = (geography) => {\n        this.setState({loading: true})\n        this.props.setLoadingStatData(true)\n        firebaseDatabase.ref(`summaryStats/congressionalDistricts/${geography.properties.DISTRICT}`)\n            .once('value')\n            .then(snapshot => snapshot.val())\n            .then(data => {\n                this.setState({\n                    projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], geography),\n                    clickedDistrict: geography.properties.DISTRICT,\n                    clickedDistrictGeography: geography,\n                    clickedZipcode: null,\n                    loading: false\n                })\n                this.props.setStatData(data, \"usHouseDistrict\")\n            })\n    }\n\n    handleZipcodeClicked = geography => {\n        if (geography.properties.ZCTA5CE10 !== this.state.clickedZipcode) {\n            this.setState({loading: true})\n            this.props.setLoadingStatData(true)\n            firebaseDatabase.ref(`summaryStats/zipcodes/${geography.properties.ZCTA5CE10}`)\n                .once('value')\n                .then(snapshot => snapshot.val())\n                .then(data => {\n                    this.props.setStatData(data || {\n                        RESIDENTIAL_ZIP: geography.properties.ZCTA5CE10,\n                        noData: true\n                    }, \"zipcode\")\n                    this.setState({\n                        clickedZipcode: geography.properties.ZCTA5CE10,\n                        projection: geography && geoEquirectangular().fitExtent([[20, 20], [480, 380]], geography),\n                        loading: false\n                    })\n                })\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <Loading/>\n            )\n        }\n        return (\n            this.state.usHouseDistricts &&\n            <>\n                <ComposableMap projection={this.state.projection}\n                               data-tip={this.state.tooltipContent}\n                               width={500}\n                               height={400}\n                               style={{margin: 10}}>\n                    {this.state.clickedDistrict &&\n                    <Geographies geography={this.state.ohioZipcodes}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       className=\"hover-geography\"\n                                       stroke=\"black\"\n                                       strokeWidth={this.state.clickedZipcode === geography.properties.ZCTA5CE10 ? 2 : 1}\n                                       fill={getLocalityColor(this.state[geography.properties.ZCTA5CE10])}\n                                       onClick={() => this.handleZipcodeClicked(geography)}\n                                       onMouseEnter={() => this.setState({\n                                           tooltipContent: `<p>Zipcode ${geography.properties.ZCTA5CE10}</p>`,\n                                           hoveringSkew: this.state[geography.properties.ZCTA5CE10]\n                                       })}\n                                       onMouseLeave={() => this.setState({\n                                           tooltipContent: \"\",\n                                           hoveringSkew: null\n                                       })}\n                            />\n                        )}\n                    </Geographies>\n                    }\n                    <Geographies geography={this.state.usHouseDistricts}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       className=\"hover-geography\"\n                                       fill={this.state.clickedDistrict ?\n                                           \"none\"\n                                           :\n                                           getLocalityColor(this.state[geography.properties.DISTRICT])}\n                                       stroke=\"black\"\n                                       strokeWidth={geography.properties.DISTRICT === this.state.clickedDistrict ? 2 : 1}\n                                       onClick={() => this.handleGeographyClicked(geography)}\n                                       onMouseEnter={() => this.setState({\n                                           tooltipContent: `<p>District ${geography.properties.DISTRICT}</p><p>Incumbent: ${geography.properties.FIRSTNAME} ${geography.properties.LASTNAME} (${geography.properties.PARTY})</p>`,\n                                           hoveringSkew: this.state[geography.properties.DISTRICT]\n                                       })}\n                                       onMouseLeave={() => this.setState({\n                                           tooltipContent: \"\",\n                                           hoveringSkew: null\n                                       })}\n                            />\n                        )}\n                    </Geographies>\n                </ComposableMap>\n                <div>\n                    Party Skew\n                </div>\n                <LocalityColorLegend position={this.state.hoveringSkew}/>\n                {this.state.clickedDistrict && !this.state.clickedZipcode &&\n                <button onClick={this.zoomToOhio}>\n                    Back to Ohio\n                </button>\n                }\n                {this.state.clickedZipcode &&\n                <button\n                    onClick={() => this.zoomToDistrict(this.state.clickedDistrictGeography)}>\n                    Back to District {this.state.clickedDistrict}\n                </button>\n                }\n                <ReactTooltip html={true}>{this.state.tooltipContent}</ReactTooltip>\n            </>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {firebaseDatabase, getOhioHouseDistricts, getOhioZipcodes} from \"../utils/data\";\nimport {ComposableMap, Geographies, Geography} from \"react-simple-maps\";\nimport {geoEquirectangular} from \"d3-geo\";\nimport ReactTooltip from \"react-tooltip\";\nimport Loading from \"./Loading\";\nimport {getLocalityColor, LocalityColorLegend} from \"../utils/calculations\";\n\nexport default class OhioHouseDistricts extends Component {\n    state = {\n        ohioHouseDistricts: null,\n        ohioZipcodes: null,\n        projection: null,\n        clickedDistrict: null,\n        clickedDistrictGeography: null,\n        clickedZipcode: null,\n        tooltipContent: \"\",\n        loading: true,\n        hoveringSkew: null\n    }\n\n    componentDidMount() {\n        const promises = [getOhioHouseDistricts(), getOhioZipcodes()];\n        Promise.all(promises).then(async ([ohioHouseDistricts, ohioZipcodes]) => {\n            await firebaseDatabase.ref('summaryStats/stateHouseDistricts').get().then(snapshot => {\n                snapshot.forEach(districtSnapshot => {\n                    this.setState({[districtSnapshot.key]: districtSnapshot.val().CODED_PARTY_AFFILIATION})\n                })\n            })\n            await firebaseDatabase.ref('summaryStats/zipcodes').get().then(snapshot => {\n                snapshot.forEach(zipcodeSnapshot => {\n                    this.setState({[zipcodeSnapshot.key]: zipcodeSnapshot.val().CODED_PARTY_AFFILIATION})\n                })\n            })\n            this.setState({\n                ohioHouseDistricts,\n                ohioZipcodes,\n                projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], ohioHouseDistricts),\n                loading: false\n            })\n            this.props.setLoadingStatData(false)\n        })\n    }\n\n    handleGeographyClicked = geography => {\n        if (geography.properties.DISTRICT === this.state.clickedDistrict) {\n            this.zoomToOhio()\n        } else {\n            this.zoomToDistrict(geography)\n        }\n    }\n\n    zoomToOhio = () => {\n        this.setState({\n            projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], this.state.ohioHouseDistricts),\n            clickedDistrict: null,\n            clickedDistrictGeography: null\n        })\n        this.props.setStatData(null, null)\n    }\n\n    zoomToDistrict = geography => {\n        this.setState({loading: true})\n        this.props.setLoadingStatData(true)\n        firebaseDatabase.ref(`summaryStats/stateHouseDistricts/${geography.properties.DISTRICT}`)\n            .once('value')\n            .then(snapshot => snapshot.val())\n            .then(data => {\n                this.setState({\n                    projection: geoEquirectangular().fitExtent([[20, 20], [480, 380]], geography),\n                    clickedDistrict: geography.properties.DISTRICT,\n                    clickedDistrictGeography: geography,\n                    clickedZipcode: null,\n                    loading: false\n                })\n                this.props.setStatData(data, \"stateHouseDistrict\")\n            })\n    }\n\n    handleZipcodeClicked = geography => {\n        if (geography.properties.ZCTA5CE10 !== this.state.clickedZipcode) {\n            this.setState({loading: true})\n            this.props.setLoadingStatData(true)\n            firebaseDatabase.ref(`summaryStats/zipcodes/${geography.properties.ZCTA5CE10}`)\n                .once('value')\n                .then(snapshot => snapshot.val())\n                .then(data => {\n                    this.props.setStatData(data || {\n                        RESIDENTIAL_ZIP: geography.properties.ZCTA5CE10,\n                        noData: true\n                    }, \"zipcode\")\n                    this.setState({\n                        clickedZipcode: geography.properties.ZCTA5CE10,\n                        projection: geography && geoEquirectangular().fitExtent([[20, 20], [480, 380]], geography),\n                        loading: false\n                    })\n                })\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <Loading/>\n            )\n        }\n        return (\n            this.state.ohioHouseDistricts &&\n            <>\n                <ComposableMap projection={this.state.projection}\n                               data-tip={this.state.tooltipContent}\n                               width={500}\n                               height={400}\n                               style={{margin: 10}}>\n                    {this.state.clickedDistrict &&\n                    <Geographies geography={this.state.ohioZipcodes}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       className=\"hover-geography\"\n                                       stroke=\"black\"\n                                       strokeWidth={this.state.clickedZipcode === geography.properties.ZCTA5CE10 ? 2 : 1}\n                                       fill={getLocalityColor(this.state[geography.properties.ZCTA5CE10])}\n                                       onClick={() => this.handleZipcodeClicked(geography)}\n                                       onMouseEnter={() => this.setState({\n                                           tooltipContent: `<p>Zipcode ${geography.properties.ZCTA5CE10}</p>`,\n                                           hoveringSkew: this.state[geography.properties.ZCTA5CE10]\n                                       })}\n                                       onMouseLeave={() => this.setState({\n                                           tooltipContent: \"\",\n                                           hoveringSkew: null\n                                       })}\n                            />\n                        )}\n                    </Geographies>\n                    }\n                    <Geographies geography={this.state.ohioHouseDistricts}>\n                        {({geographies}) => geographies.map(geography =>\n                            <Geography key={geography.rsmKey}\n                                       geography={geography}\n                                       className=\"hover-geography\"\n                                       fill={this.state.clickedDistrict ?\n                                           \"none\"\n                                           :\n                                           getLocalityColor(this.state[geography.properties.DISTRICT])\n                                       }\n                                       stroke=\"black\"\n                                       strokeWidth={geography.properties.DISTRICT === this.state.clickedDistrict ? 2 : 1}\n                                       onClick={() => this.handleGeographyClicked(geography)}\n                                       onMouseEnter={() => this.setState({\n                                           tooltipContent: `<p>District ${geography.properties.DISTRICT}</p><p>Incumbent: ${geography.properties.FIRSTNAME} ${geography.properties.LASTNAME} (${geography.properties.PARTY})</p>`,\n                                           hoveringSkew: this.state[geography.properties.DISTRICT]\n                                       })}\n                                       onMouseLeave={() => this.setState({\n                                           tooltipContent: \"\",\n                                           hoveringSkew: null\n                                       })}\n                            />\n                        )}\n                    </Geographies>\n                </ComposableMap>\n                <div>\n                    Party Skew\n                </div>\n                <LocalityColorLegend position={this.state.hoveringSkew}/>\n                {this.state.clickedDistrict && !this.state.clickedZipcode &&\n                <button onClick={this.zoomToOhio}>\n                    Back to Ohio\n                </button>\n                }\n                {this.state.clickedZipcode &&\n                <button\n                    onClick={() => this.zoomToDistrict(this.state.clickedDistrictGeography)}>\n                    Back to District {this.state.clickedDistrict}\n                </button>\n                }\n                <ReactTooltip html={true}>{this.state.tooltipContent}</ReactTooltip>\n            </>\n        )\n    }\n}\n","import React, {Component} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons\";\nimport {CSVDownload} from \"react-csv\";\nimport {elementOrEmpty} from \"react-csv/src/core\";\nimport {buildURI} from \"../utils/calculations\";\nimport {firebaseDatabase} from \"../utils/data\";\n\nconst keys = [\"voter_SOS_ID\", \"CONGRESSIONAL_DISTRICT\", \"COUNTY_ID\", \"COUNTY_NUMBER\", \"COURT_OF_APPEALS\",\n    \"DATE_OF_BIRTH\", \"FIRST_NAME\", \"General\", \"LAST_NAME\", \"PRECINCT_CODE\", \"PRECINCT_NAME\",\n    \"Primary\", \"REGISTRATION_DATE\", \"RESIDENTIAL_ADDRESS1\", \"RESIDENTIAL_CITY\",\n    \"RESIDENTIAL_SECONDARY_ADDR\", \"RESIDENTIAL_ZIP\", \"STATE_BOARD_OF_EDUCATION\",\n    \"STATE_REPRESENTATIVE_DISTRICT\", \"STATE_SENATE_DISTRICT\", \"Score\", \"Special\", \"VOTER_STATUS\"]\n\nexport default class StatisticsTable extends Component {\n    getHeader = () => {\n        if (!this.props.localityType) {\n            return \"Ohio\"\n        } else if (this.props.localityType === 'usHouseDistrict') {\n            return `US House District: ${this.props.statData.CONGRESSIONAL_DISTRICT}`\n        } else if (this.props.localityType === 'stateSenateDistrict') {\n            return `Ohio Senate District: ${this.props.statData.STATE_SENATE_DISTRICT}`\n        } else if (this.props.localityType === 'stateHouseDistrict') {\n            return `Ohio House District: ${this.props.statData.STATE_REPRESENTATIVE_DISTRICT}`\n        } else if (this.props.localityType === 'cities') {\n            return `City: ${this.props.statData.CITY}`\n        } else if (this.props.localityType === 'zipcode') {\n            return `Zipcode: ${this.props.statData.RESIDENTIAL_ZIP}`\n        }\n    }\n\n    getData = () => {\n        if (!this.props.statData) {\n            return {\n                Age: '46.11 ± 17.98',\n                \"Party Skew\": '0.03040',\n                \"# Registered Voters\": '180871',\n                \"Overall AVES\": '0.140',\n                \"General Election AVES\": '0.259',\n                \"Primary Election AVES\": '0.052',\n                \"Special Election AVES\": '0.023',\n            }\n        }\n        if (this.props.statData.noData) {\n            return {\n                Error: \"No data found\"\n            }\n        } else {\n            return {\n                Age: `${this.props.statData.avg_age.toFixed(2)} ± ${(this.props.statData.age_stddev || 0).toFixed(2)}`,\n                \"Party Skew\": this.props.statData.CODED_PARTY_AFFILIATION.toFixed(5),\n                \"# Registered Voters\": this.props.statData[\"Number of Rows (Aggregated)\"],\n                \"Overall AVES\": this.props.statData.Score.toFixed(3),\n                \"General Election AVES\": this.props.statData.General.toFixed(3),\n                \"Primary Election AVES\": this.props.statData.Primary.toFixed(3),\n                \"Special Election AVES\": this.props.statData.Special.toFixed(3)\n            };\n        }\n    }\n\n    downloadCSV = () => {\n        firebaseDatabase.ref(`zipcodes/${this.props.statData.RESIDENTIAL_ZIP}/voters`)\n            .get()\n            .then(snapshot => {\n                const array = [\n                    keys\n                ]\n                snapshot.forEach(voterSnapshot => {\n                    const newArray = []\n                    const val = voterSnapshot.val()\n                    for (const key of keys) {\n                        if (key === \"voter_SOS_ID\") {\n                            newArray.push(voterSnapshot.key)\n                        } else {\n                            newArray.push(val[key])\n                        }\n                    }\n                    array.push(newArray)\n                })\n                window.open(buildURI(array))\n            })\n    }\n\n    render() {\n        return (\n            <div style={{width: \"30%\"}}>\n                <h2>\n                    Locality AAPI Statistics:\n                </h2>\n                {this.props.loading ?\n                    <div style={{\n                        width: \"100%\",\n                        border: \"1px solid white\",\n                        borderRadius: 4,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        height: 310,\n                        color: \"#bbb\",\n                        fontSize: 20\n                    }}>\n                        <p>\n                            <FontAwesomeIcon icon={faSpinner} pulse/> Loading...\n                        </p>\n                    </div>\n                    :\n                    <div style={{width: \"100%\", height: 310, border: \"1px solid white\", borderRadius: 4}}>\n                        <h3>\n                            {this.getHeader()}\n                        </h3>\n                        {Object.entries(this.getData()).map(([label, value]) => (\n                            <p key={label}>{label}: {value}</p>\n                        ))}\n                    </div>\n                }\n                <div style={{fontSize: 10, width: \"100%\", textAlign: \"center\", marginTop: 16}}>\n                    <i>Source: Ohio Secretary of State, Dr. Tom Wong (UCSD Political Science Department).</i>\n                </div>\n                {this.props.localityType === 'zipcode' &&\n                <button onClick={this.downloadCSV} style={{marginTop: 16}}>\n                    Download Voter CSV\n                </button>\n                }\n                {this.props.localityType !== 'zipcode' &&\n                <div style={{marginTop: 24}}>\n                    Drill down to a specific zipcode of interest to download its voter profiles as a CSV!\n                </div>\n                }\n            </div>\n        )\n    }\n\n}\n","import React, {Component} from \"react\";\nimport OhioCities from \"../components/OhioCities\";\nimport OhioSenateDistricts from \"../components/OhioSenateDistricts\";\nimport USHouseDistricts from \"../components/USHouseDistricts\";\nimport OhioHouseDistricts from \"../components/OhioHouseDistricts\";\nimport StatisticsTable from \"../components/StatisticsTable\";\n\nexport default class MapPage extends Component {\n    state = {\n        selectedTab: 0,\n        statData: null,\n        localityType: null,\n        loadingStatData: true\n    }\n\n    setStatData = (statData, localityType) => this.setState({statData, localityType, loadingStatData: false});\n\n    toggleSelectedTab = selectedTab => {\n        if (selectedTab !== this.state.selectedTab) {\n            this.setState({selectedTab, statData: null, localityType: null, loadingStatData: true})\n        }\n    }\n\n    setLoadingStatData = isLoading => this.setState({loadingStatData: isLoading});\n\n    render() {\n        return (\n            <>\n                <div style={{padding: 20}}>\n                    <button className={this.state.selectedTab === 0 && \"selected\"}\n                            onClick={() => this.toggleSelectedTab(0)}>\n                        US House District\n                    </button>\n                    <button className={this.state.selectedTab === 1 && \"selected\"}\n                            onClick={() => this.toggleSelectedTab(1)}>\n                        Ohio Senate District\n                    </button>\n                    <button className={this.state.selectedTab === 2 && \"selected\"}\n                            onClick={() => this.toggleSelectedTab(2)}>\n                        Ohio House District\n                    </button>\n                    <button className={this.state.selectedTab === 3 && \"selected\"}\n                            onClick={() => this.toggleSelectedTab(3)}>\n                        Cities\n                    </button>\n                </div>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\"\n                }}>\n                    <div style={{width: \"50%\", maxWidth: 500, height: 500}}>\n                        {this.state.selectedTab === 0 && <USHouseDistricts setStatData={this.setStatData}\n                                                                           setLoadingStatData={this.setLoadingStatData}/>}\n                        {this.state.selectedTab === 1 && <OhioSenateDistricts setStatData={this.setStatData}\n                                                                              setLoadingStatData={this.setLoadingStatData}/>}\n                        {this.state.selectedTab === 2 && <OhioHouseDistricts setStatData={this.setStatData}\n                                                                             setLoadingStatData={this.setLoadingStatData}/>}\n                        {this.state.selectedTab === 3 && <OhioCities setStatData={this.setStatData}\n                                                                     setLoadingStatData={this.setLoadingStatData}/>}\n                    </div>\n                    <StatisticsTable localityType={this.state.localityType} statData={this.state.statData}\n                                     loading={this.state.loadingStatData}/>\n                </div>\n            </>\n        )\n    }\n\n}\n","import React, {Component} from \"react\";\n\nexport default class AboutPage extends Component {\n    render() {\n        return (\n            <div style={{padding: \"32px 200px 32px 200px\", textAlign: \"left\"}}>\n                <h1>Ohio AAPI Voter Outreach Visualization Tool</h1>\n                <h3 style={{color: \"#c09cfa\"}}>Darian Bhathena, Noah Faro, Rishi Shah</h3>\n\n                <p>\n                    <i>In the last decade, significantly more work has done to integrate data-based decision making into\n                        political campaigns, particularly in the US. This is resulted in hyper-focused targeting of\n                        voters online, particularly via social media and a boooming digital advertising/data marketplace\n                        industry that is collecting an immense amount of information on the general public. However,\n                        both election results and recent work supports the relatively small effects of advertising\n                        compared to building a robust local turnout and engagement operation. This project creates a\n                        visualization tool to enable grassroots voter outreach to Asian American and Pacific Islander\n                        (AAPI) voters in the state of Ohio.</i>\n                </p>\n                <br/>\n                <h2 style={{color: \"#9f67fa\"}}>Introduction</h2>\n                <p>\n                    With the growing importance of grassroots outreach in political campaigns, it is more important than\n                    ever that organizations organizations have comprehensive and expressive visualization tools to to\n                    target and customize their efforts to be as effective as possible. In order to create these tools\n                    however, an intimate knowledge of data visualization and data science has to combined with the\n                    expertise and requirements of local grassroots leaders in order to be as effective as possible. For\n                    our final project in 6.859, Interactive Data Visualization, our team worked closely with a\n                    not-for-profit grassroots organization in Ohio and a political science researcher at the University\n                    of California San Diego (UCSD) to create a specialized voter outreach visualization [3]. Since our\n                    partner organization is specifically focused on encouraging civic engagement in the Asian American\n                    and Pacific Islander (AAPI) community in the state of Ohio, we were able to appropriately scope our\n                    project for the purposes of the course, while contributing to the civic engagement of this local\n                    community. In discussions and interviews with our partner organization, it was clear that a\n                    visualization tool would be helpful to enable better targeting of outreach efforts. As such, our\n                    primary goals for the visualization tool were to:\n                    <ol>\n                        <li>\n                            Provide political organizers with the ability to gain insight into the AAPI voters of\n                            specific localities in Ohio, based on prominent voting districts in the state\n                        </li>\n                        <li>\n                            Allow for users to export specific subsets of public voter data\n                        </li>\n                        <li>\n                            Showcase a specific workflow or storyline about AAPI voter engagement\n                        </li>\n                    </ol>\n                </p>\n                <br/>\n                <h2 style={{color: \"#9f67fa\"}}>Related Work</h2>\n                <p>\n                    One aspect of important design decisions we made was the encoding of\n                    data on the central state map of the visualization tab. In deliberating this\n                    design decision, we took inspiration from the work of Andy Woodruff,\n                    a notable cartographer and data visualization expert. Specifically, we\n                    took inspiration from his ’value-by-alpha’ methodology, where data is\n                    represented through the alpha-value (transparency) of the representation\n                    [9]. Because this methodology is so central to the first-impression of\n                    the visualization, we also adopted a similar color scheme to that of\n                    Woodruff’s, in order to further emphasize the value-by-alpha data\n                    embedding.\n                </p>\n                <p>\n                    It is worth noting that in the creation of this visualization, we were\n                    consistently reflecting on the ethical implications of the visualization\n                    tool. Much of this was inspired by in-class review of work by Michael\n                    Correll and Catherine D’Ignazio. Specifically, we wanted to be conscious\n                    of the implications of how we showcase data on the underrepresented\n                    minority population of AAPIs. Particularly notable from the\n                    related work on this topic was how we chose what preset options are\n                    provided to users to filter data by (in our case, the localities of US\n                    House District, State Senate District, etc) and what steps can be taken\n                    to prevent the misuse of the voter-level individual information that is\n                    exportable from our visualization tool [7, 8].\n                </p>\n                <br/>\n                <h2 style={{color: \"#9f67fa\"}}>Methods</h2>\n                <h3 style={{color: \"#c09cfa\"}}>Data Sourcing and Wrangling</h3>\n                <p>\n                    Our primary source of data was the Ohio Secretary of State’s Voter\n                    Files [1], which is a public repository of all registered voters in the\n                    state. This database includes most information that each voter includes\n                    in their registration such as mailing and residential addresses and birth\n                    date. Notably, the database also includes the voting records of each\n                    registered voter (indicating whether or not individuals voted, rather\n                    than who they voted for).\n                </p>\n                <p>\n                    Our second significant data source was from Dr. Tom Wong, our\n                    UCSD political science partner [3]. In his research, Dr. Wong has created\n                    a metric to estimate the likelihood of a voter being a member of the\n                    AAPI community. Utilizing this valuable augmentation, we were able\n                    to filter the publicly available dataset in order to focus the visualization\n                    on only AAPI voters. Select data sets of supplementary information,\n                    such as total populations of different localities, was sourced from the\n                    US Census Bureau [6].\n                </p>\n                <p>\n                    A variety of geolocation data sets were also utilized from multiple\n                    open sources, including the Ohio Department of Transportation and the\n                    organization Open Data Delaware [2, 5].\n                </p>\n                <p>\n                    A large amount of pre-processing was conducted utilizing the\n                    Tableau Prep Builder software in order to join the metrics from the different\n                    data sources for each individual voter file. In addition, summary\n                    statistics were pre-calculated for the different localities displayed on\n                    the map, to facilitate efficient loading of the visualization.\n                </p>\n                <br/>\n                <h3 style={{color: \"#c09cfa\"}}>Data Storage</h3>\n                <p>\n                    With our web-based visualization, we found that directly loading raw\n                    data files into the part of the public directory loaded into users’ browsers\n                    was inefficient and introducing latency into the loading of the visualization.\n                    As such, we chose to store all non-geospatial data on an\n                    external database hosted by the service Firebase. Using their Realtime\n                    Database service, we were able to improve rendering efficiency of the\n                    visualization and prevent the web-page crashes we saw in our A4 [4].\n                </p>\n                <br/>\n                <h3 style={{color: \"#c09cfa\"}}>Voter Engagement Score</h3>\n                <p>\n                    Given that the voting records of each of the voters were part of the\n                    publicly accessible data set, we were able to calculate a Voter Engagement\n                    Score (VES) for each voter. The VES represents the proportion\n                    of eligible elections voters have cast a ballot in since the beginning of\n                    the year 2000 (since this is the earliest included election public voting\n                    record). It is important to note that eligibility in the election was defined\n                    as all elections in which a voter was 18 years of age; for example, if a\n                    voter had not registered since the 2016 general election, but had turned\n                    18 in 2012, all the elections that she had failed to register for between\n                    2012 and 2016 would count against her VES.\n                </p>\n                <p>\n                    Furthermore, we calculated three more specific VES variations besides\n                    a voter’s overall VES, to assess their engagement in specifically\n                    general, primary, and special elections.\n                </p>\n                <br/>\n                <h2 style={{color: \"#9f67fa\"}}>Results</h2>\n                <h3 style={{color: \"#c09cfa\"}}>Scrollytelling</h3>\n                <p>\n                    The first step of our visualization tool as shown to users is a scrollytelling\n                    feature. This showcases a specific story line, about the partisan\n                    divide in the AAPI community of Ohio. This visualization component\n                    fulfills the third central goal of our project, to showcase a specific\n                    workflow about AAPI voter engagement.\n                </p>\n                <p>\n                    We made a specific design choice to include this scrollytelling component\n                    as the landing page for the visualization, because it provides\n                    users with an introduction to the purpose of our visualization tool, an\n                    overview of the key concepts underpinning our visualization, as well\n                    as a interesting series of visualizations that may prompt users to want\n                    to investigate further.\n                </p>\n                <br/>\n                <h3 style={{color: \"#c09cfa\"}}>Map</h3>\n                <p>\n                    After viewing a sample story line showcased on the ’Story’ page of\n                    the visualization, users can move over to the ’Map’ page to get a\n                    more interactive visualization of the data. This component of the\n                    visualization tool fulfills our project’s first two primary goals, to allow\n                    users more exploration of the data in order to allow for targeted voter\n                    outreach as well as for the exporting of specific the voter files.\n                </p>\n                <p>\n                    To allow for sufficient flexibility in the interactive components of\n                    the map, we allowed the user to subdivide the map of Ohio by four\n                    different localities: US House District, Ohio Senate District, Ohio\n                    House District, and City. These four localities each represent the voting\n                    districts of prominent publicly elected officials, and ask such serve as\n                    food filters for the users of this visualization tool. Furthermore, we\n                    utilize zip code to display even more detailed summary statistics about\n                    the AAPI population, as zip code is the smallest level of geolocation\n                    that was realistic to be visualized. However, introducing zip codes\n                    into the visualization posed an interesting design challenge, since the\n                    boundaries of the main localities (voting districts) rarely lined up perfectly\n                    with its zip codes. As such, we made the decision to display the\n                    zip codes while also showing an outline of the larger locality, instead\n                    of binning the zip code, since that would have conveyed inaccurate\n                    information (conveys that the full population in the zip code resides in\n                    the larger locality, which may not necessarily be true).\n                </p>\n                <p>\n                    As part of the development of this map component, we made the\n                    design decision of allowing users to export specific subsets of the data,\n                    in order to make the visualization tool as useful as possible. We do\n                    however recognize that this introduces concerns regarding data privacy.\n                    As such, we’ve restricted the columns of the exported data files to only\n                    those that are available from the public data set (rather than data that\n                    was received from our project partners). This small step ensures that\n                    the tool can still be used for legitimate voter engagement (if users have\n                    external access to similar data, they can correlate the filtered data subset\n                    from our visualization tool via voter UID) while preventing abuse of\n                    this functionality.\n                </p>\n                <br/>\n                <h2 style={{color: \"#9f67fa\"}}>Discussion</h2>\n                <p>\n                    In interviews with our partner organization, it was clear that the creation of this visualization\n                    tool enabled specific insights and practices for voter\n                    engagement. Specifically, perhaps the largest contribution is the ability\n                    for the organization to identify in which area they will conduct their\n                    next round of phone bank outreach calls.\n                </p>\n                <p>\n                    These engagement operations, where trained callers contact a specific\n                    subset of voters, is primarily for the purpose of expanding the\n                    information included in an organization’s voter file data repository.\n                    With this more detailed dataset, organizations are able to better target\n                    voters, advertise their initiatives more strategically, and recruit volunteers\n                    by engaging with these voters on issues they are passionate\n                    about.\n                </p>\n                <br/>\n                <h2 style={{color: \"#9f67fa\"}}>Future Work</h2>\n                <p>\n                    In future iterations of this project, we expect to expand the visualization\n                    to incorporate the person-level data, that is currently only interfaced\n                    through the export functionality. This could take multiple different\n                    forms, such as the expansion of a list of individual voters when a\n                    specific locality is selected or the visualization of the residential addresses\n                    of each voter (which would require a paid subscription to a\n                    geocoding service able to encode residential addresses into geospatial\n                    coordinates).\n                </p>\n                <p>\n                    Furthermore, we hope to build a functionality such that users can upload\n                    supplementary data collected through outreach into the system, to\n                    make the visualization more expansive. This import functionality could\n                    also open the possibility of analytics running in the background to highlight\n                    salient details about the imported data, or a dynamic scrollytelling\n                    that changes based upon the imported data.\n                </p>\n\n                <br/>\n                <h2 style={{color: \"#9f67fa\"}}>Acknowledgements</h2>\n                <p>\n                    The authors wish to thank Arvind Satyanarayan, Katie Bacher, Do˘ga\n                    Do˘gan, Saadiyah Husnoo, and Ebenezer Sefah for their fantastic teaching and mentorship,\n                    Dr. TomWong of University of California San Diego for the data source,\n                    and Rising Tide Ohio, a not-for-profit grassroots political organization\n                    focused on civic engagement of AAPI Ohioans, for their guidance and\n                    cooperation.\n                </p>\n                <br/>\n                <h2 style={{color: \"#9f67fa\"}}>References</h2>\n                <p>\n                    [1] County Voter Files Download Page.<br/>\n                    [2] Data Download ODOT TIMS.<br/>\n                    [3] Dr. tom k. wong, university of california san diego.<br/>\n                    [4] Firebase realtime database.<br/>\n                    [5] Open Data Delaware.<br/>\n                    [6] U. C. Bureau. Census data.<br/>\n                    [7] M. Correll. Ethical dimensions of visualization research. In Proceedings\n                    of the 2019 CHI Conference on Human Factors in Computing Systems, p.\n                    1–13. ACM, May 2019. doi: 10.1145/3290605.3300418<br/>\n                    [8] C. D’Ignazio. Data Feminism. Mar 2020.<br/>\n                    [9] A. Woodruff. Value-by-alpha maps— andy woodruff.\n                </p>\n            </div>\n\n        )\n    }\n}\n","import {Link, Route, Switch, Redirect} from \"react-router-dom\";\nimport './App.css';\nimport StoryPage from \"./pages/StoryPage\";\nimport MapPage from \"./pages/MapPage\";\nimport AboutPage from \"./pages/AboutPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <nav>\n                <Link to=\"/story\">Story</Link>\n                <Link to=\"/map\">Map</Link>\n                <Link to=\"/about\">About</Link>\n            </nav>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/story\"/>\n                </Route>\n                <Route exact path=\"/story\" component={StoryPage}/>\n                <Route exact path=\"/map\" component={MapPage}/>\n                <Route exact path=\"/about\" component={AboutPage}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}